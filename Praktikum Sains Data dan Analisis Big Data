graph = {
  'A' : ['Z','S', 'T'],
  'Z' : ['O'],
  'O' : ['S1'],
  'S1' : ['F','R'],
  'F' : ['B'],
  'B' : [],
  'R' : [],
  'S' : ['O1', 'F1', 'R1'],
  'O1' : [],
  'F1' : ['B1'],
  'B1' : [],
  'R1' : ['C', 'P'],
  'C' : [],
  'P' : [],
  'T' : ['L'],
  'L' : ['M'],
  'M' : ['D'],
  'D' : []
}

visited = [] # List for visited nodes.
queue = []     #Initialize a queue

def bfs(visited, graph, node): #function for BFS
  visited.append(node)
  queue.append(node)

  while queue:          # Creating loop to visit each node
    m = queue.pop(0)
    print (m, end = " ")

    for neighbour in graph[m]:
      if neighbour not in visited:
        visited.append(neighbour)
        queue.append(neighbour)

# Driver Code
print("Nama: Nuraini Sulistya")
print("NIM: 11521056")
print("Praktikum: ")
# Driver Code
print("Following is the Breadth-First Search:")
bfs(visited, graph, 'A')
